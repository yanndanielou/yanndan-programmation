<?xml version="1.0" encoding="UTF-8"?><testrun name="InfiniteNaturalNumberTest" project="Numbers" tests="20" started="17" failures="1" errors="0" ignored="0">
  <testsuite name="test.numbers.InfiniteNaturalNumberTest" incomplete="true">
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.02">
      <testcase name="onePlusTwoEqualsThree" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.02"/>
      <testcase name="onePlusOneEqualsTwo" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.0"/>
      <testcase name="onePlusTwentyEqualsTwentyOne" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.0"/>
      <testcase name="afterAdditionInitialNumbersAreUnchanged" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.0"/>
      <testcase name="onePlusTenEqualsEleven" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.0"/>
      <testcase name="withCarry_5Plus6Equals11" classname="test.numbers.InfiniteNaturalNumberTest.Addition" time="0.0"/>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison" time="0.01">
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.0">
        <testcase name="oneAndTenAreNotEqual" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.0"/>
        <testcase name="tenAndTwentyAreNotEqual" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.0"/>
        <testcase name="sameNumberAreEquals" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.0"/>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.01">
        <testcase name="tenIsStricltlyGreaterThanOne" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="twoIsStricltlyGreaterThanOne" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="tenIsNotStricltlyGreaterThanTen_sameInstance" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.01"/>
        <testcase name="tenIsNotStricltlyGreaterThanTen_differentInstances" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="twentyTwoIsStricltlyGreaterThanEleven" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
      </testsuite>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Multiplication" incomplete="true">
      <testcase name="tenTimesZeroIsZero" classname="test.numbers.InfiniteNaturalNumberTest.Multiplication" time="7.054"/>
      <testcase name="tenTimesTenIsHundred" classname="test.numbers.InfiniteNaturalNumberTest.Multiplication" time="0.02">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:86)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at org.junit.Assert.assertTrue(Assert.java:52)&#13;
	at test.numbers.InfiniteNaturalNumberTest$Multiplication.tenTimesTenIsHundred(InfiniteNaturalNumberTest.java:106)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="tenTimesOneIsTen" classname="test.numbers.InfiniteNaturalNumberTest.Multiplication" incomplete="true"/>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Substraction" incomplete="true">
      <testcase name="TwentyOneMinusTenIsEleven" classname="test.numbers.InfiniteNaturalNumberTest.Substraction" incomplete="true"/>
      <testcase name="oneMinusOneIsZero" classname="test.numbers.InfiniteNaturalNumberTest.Substraction" incomplete="true"/>
      <testcase name="tenMinusTwoIsHeight" classname="test.numbers.InfiniteNaturalNumberTest.Substraction" incomplete="true"/>
    </testsuite>
  </testsuite>
</testrun>
