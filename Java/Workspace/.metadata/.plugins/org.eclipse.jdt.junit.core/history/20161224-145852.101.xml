<?xml version="1.0" encoding="UTF-8"?><testrun name="InfiniteNaturalNumberTest" project="Numbers" tests="86" started="86" failures="4" errors="0" ignored="0">
  <testsuite name="test.numbers.InfiniteNaturalNumberTest" time="1.419">
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations" time="1.389">
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary" time="1.387">
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0">
          <testcase name="onePlusTwoEqualsThree" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="onePlusOneEqualsTwo" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="withCarry_9Plus1Equals10" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="withCarry_90Plus10Equals100" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="onePlusTwentyEqualsTwentyOne" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="afterAdditionInitialNumbersAreUnchanged" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="onePlusTenEqualsEleven" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
          <testcase name="withCarry_5Plus6Equals12" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Addition" time="0.0"/>
        </testsuite>
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.064">
          <testcase name="hunderdDividedByNineIsEleven" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.0"/>
          <testcase name="hunderdDividedByElevenIsNine" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.0"/>
          <testcase name="tenDividedByTenIsOne" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.0"/>
          <testcase name="hunderdDividedByTenIsTen" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.0"/>
          <testcase name="hunderdDividedByOneIsHundred" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.0"/>
          <testcase name="tenDividedByElevenIsZero" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Division" time="0.064"/>
        </testsuite>
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication" time="1.321">
          <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.PerfTests" time="1.32">
            <testcase name="test_1_000_000_times_1_000_000" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.PerfTests" time="1.309"/>
            <testcase name="test_2_times_10_000" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.PerfTests" time="0.001"/>
            <testcase name="test_10_000_times_2" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.PerfTests" time="0.0"/>
            <testcase name="test_10_000_times_10_000" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.PerfTests" time="0.01"/>
          </testsuite>
          <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.TestResult" time="0.001">
            <testcase name="tenTimesZeroIsZero" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.TestResult" time="0.0"/>
            <testcase name="tenTimesTwoIsTwenty" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.TestResult" time="0.001"/>
            <testcase name="tenTimesTenIsHundred" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.TestResult" time="0.0"/>
            <testcase name="tenTimesOneIsTen" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Multiplication.TestResult" time="0.0"/>
          </testsuite>
        </testsuite>
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Substraction" time="0.002">
          <testcase name="TwentyOneMinusTenIsEleven" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Substraction" time="0.001"/>
          <testcase name="oneMinusOneIsZero" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Substraction" time="0.0"/>
          <testcase name="tenMinusTwoIsHeight" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Substraction" time="0.0"/>
          <testcase name="hundredMinusNineIs91" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Elementary.Substraction" time="0.001"/>
        </testsuite>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers" time="0.001">
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.001">
          <testcase name="Two_times10Power1__is_20" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.0"/>
          <testcase name="Five_times10Power0__is_5" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.0"/>
          <testcase name="One_times10Power1__is_10" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.0"/>
          <testcase name="Five_times10Power1__is_50" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.001"/>
          <testcase name="One_times10Power2__is_10" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.Powers.Powers10" time="0.0"/>
        </testsuite>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.RestOfDivision" time="0.001">
        <testcase name="_of_10_by_3_is_1" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.RestOfDivision" time="0.0"/>
        <testcase name="_of_10_by_11_is_10" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.RestOfDivision" time="0.001"/>
        <testcase name="_of_10_by_10_is_0" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.RestOfDivision" time="0.0"/>
        <testcase name="_of_100_by_11_is_1" classname="test.numbers.InfiniteNaturalNumberTest.ArithmeticalOperations.RestOfDivision" time="0.0"/>
      </testsuite>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.003">
      <testcase name="getBase10DigitsInversion_of_102_is_201" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.001"/>
      <testcase name="getBase10DigitsInversion_of_11_is_11" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.0"/>
      <testcase name="getBase10DigitsInversion_of_0_is_0" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.0"/>
      <testcase name="getBase10DigitsInversion_of_12_is_21" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.0"/>
      <testcase name="getBase10DigitsInversion_of_100_is_1" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.0"/>
      <testcase name="getBase10DigitsInversion_twice_of_number_returns_same_number" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.0"/>
      <testcase name="getBase10DigitsInversion_of_10_is_1" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsInversion" time="0.002"/>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.002">
      <testcase name="Base10DigitsMultiplication_of_412_is_8" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_124_is_8" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_421_is_8" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_0_is_0" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.001"/>
      <testcase name="Base10DigitsMultiplication_of_1_is_1" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_10_is_0" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_11_is_1" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_12_is_2" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
      <testcase name="Base10DigitsMultiplication_of_111_is_1" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.001"/>
      <testcase name="Base10DigitsMultiplication_of_321_is_6" classname="test.numbers.InfiniteNaturalNumberTest.Base10DigitsMultiplication" time="0.0"/>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison" time="0.003">
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.002">
        <testcase name="oneAndTenAreNotEqual" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.001"/>
        <testcase name="tenAndTwentyAreNotEqual" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.0"/>
        <testcase name="sameNumberAreEquals" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.Equal" time="0.001"/>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison.GreaterOrEquals" time="0.0">
        <testcase name="oneIsNotGreaterOrEquansToNine" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.GreaterOrEquals" time="0.0"/>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.001">
        <testcase name="tenIsStricltlyGreaterThanOne" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="twoIsStricltlyGreaterThanOne" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.001"/>
        <testcase name="tenIsNotStricltlyGreaterThanTen_sameInstance" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="tenIsNotStricltlyGreaterThanTen_differentInstances" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
        <testcase name="twentyTwoIsStricltlyGreaterThanEleven" classname="test.numbers.InfiniteNaturalNumberTest.Comparison.StrictlyGreater" time="0.0"/>
      </testsuite>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.ContainsDigit" time="0.001">
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.ContainsDigit.AsByte" time="0.001">
        <testcase name="Ten_containsDitig_1" classname="test.numbers.InfiniteNaturalNumberTest.ContainsDigit.AsByte" time="0.001"/>
      </testsuite>
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.ContainsDigit.AsInt" time="0.0">
        <testcase name="Ten_containsDitig_1" classname="test.numbers.InfiniteNaturalNumberTest.ContainsDigit.AsInt" time="0.0"/>
      </testsuite>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.002">
      <testcase name="areDigitsOrderedInGrowingOrder_10_false" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.0"/>
      <testcase name="areDigitsOrderedInGrowingOrder_123_True" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.001"/>
      <testcase name="areDigitsOrderedInGrowingOrder_100_False" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.0"/>
      <testcase name="areDigitsOrderedInGrowingOrder_8_true" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.0"/>
      <testcase name="areDigitsOrderedInGrowingOrder_101_False" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.0"/>
      <testcase name="areDigitsOrderedInGrowingOrder_11_true" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.0"/>
      <testcase name="areDigitsOrderedInGrowingOrder_12_true" classname="test.numbers.InfiniteNaturalNumberTest.DigitsOrderedInGrowingOrder" time="0.001"/>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder" time="0.017">
      <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors" time="0.017">
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.AllPrimeDivisors" time="0.011">
          <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.AllPrimeDivisors.TestResult" time="0.011">
            <testcase name="of_10_are_2_5" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.AllPrimeDivisors.TestResult" time="0.009">
              <failure>java.lang.AssertionError: 
Expected: iterable containing [&lt;2&gt;, &lt;5&gt;]
     but: No item matched: &lt;5&gt;&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors.computeAndCheck(InfiniteNaturalNumberTest.java:499)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors$TestResult.after(InfiniteNaturalNumberTest.java:506)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
            </testcase>
            <testcase name="of_6_are_2_3" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.AllPrimeDivisors.TestResult" time="0.001">
              <failure>java.lang.AssertionError: 
Expected: iterable containing [&lt;2&gt;, &lt;3&gt;]
     but: No item matched: &lt;3&gt;&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors.computeAndCheck(InfiniteNaturalNumberTest.java:499)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors$TestResult.after(InfiniteNaturalNumberTest.java:506)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
            </testcase>
            <testcase name="of_20_are_2_2_5" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.AllPrimeDivisors.TestResult" time="0.001">
              <failure>java.lang.AssertionError: 
Expected: iterable containing [&lt;2&gt;, &lt;2&gt;, &lt;5&gt;]
     but: No item matched: &lt;5&gt;&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors.computeAndCheck(InfiniteNaturalNumberTest.java:499)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$AllPrimeDivisors$TestResult.after(InfiniteNaturalNumberTest.java:506)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
            </testcase>
          </testsuite>
        </testsuite>
        <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors" time="0.005">
          <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.005">
            <testcase name="for_16_returns_true" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.0"/>
            <testcase name="for_20_returns_true" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.0"/>
            <testcase name="for_22_returns_false" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.001"/>
            <testcase name="for_10_returns_true" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.0"/>
            <testcase name="for_9_returns_true" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult" time="0.0"/>
            <testsuite name="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult.PerfTests" time="0.004">
              <testcase name="for_2048_returns_true" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult.PerfTests" time="0.004"/>
              <testcase name="for_2053_returns_false" classname="test.numbers.InfiniteNaturalNumberTest.DivisorsFinder.PrimeDivisors.HasOnlyOneDigitPrimeDivisors.TestResult.PerfTests" time="0.0">
                <failure>java.lang.AssertionError: 
Expected: is &lt;false&gt;
     but: was &lt;true&gt;&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$HasOnlyOneDigitPrimeDivisors.computeAndCheck(InfiniteNaturalNumberTest.java:435)&#13;
	at test.numbers.InfiniteNaturalNumberTest$DivisorsFinder$PrimeDivisors$HasOnlyOneDigitPrimeDivisors$TestResult$PerfTests.after(InfiniteNaturalNumberTest.java:473)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:26)&#13;
	at de.bechte.junit.runners.context.processing.ContextExecutor.run(ContextExecutor.java:15)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
              </testcase>
            </testsuite>
          </testsuite>
        </testsuite>
      </testsuite>
    </testsuite>
    <testsuite name="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.001">
      <testcase name="ZeroIsPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.0"/>
      <testcase name="HundredOneIsPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.0"/>
      <testcase name="OneIsPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.0"/>
      <testcase name="ElevenIsPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.0"/>
      <testcase name="HundredIsNotPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.001"/>
      <testcase name="TwelveIsNotPalindrome" classname="test.numbers.InfiniteNaturalNumberTest.Palindrome" time="0.0"/>
    </testsuite>
  </testsuite>
</testrun>
