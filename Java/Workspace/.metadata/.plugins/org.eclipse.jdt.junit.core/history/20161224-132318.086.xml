<?xml version="1.0" encoding="UTF-8"?><testrun name="PerfTests.of_2003_hasNoDivisor" project="Numbers" tests="2" started="2" failures="0" errors="1" ignored="0">
  <testsuite name="test.numbers.InfiniteNaturalNumberTest.Divisors.AllPrimeDivisors.PerfTests" time="7.024">
    <testcase name="of_10_000_are_2_2_2_2_5_5_5_5" classname="test.numbers.InfiniteNaturalNumberTest.Divisors.AllPrimeDivisors.PerfTests" time="6.769"/>
    <testcase name="of_2003_hasNoDivisor" classname="test.numbers.InfiniteNaturalNumberTest.Divisors.AllPrimeDivisors.PerfTests" time="0.255">
      <error>java.lang.IllegalArgumentException: Should specify at least one expected element&#13;
	at org.hamcrest.collection.IsIterableContainingInOrder$MatchSeries.&lt;init&gt;(IsIterableContainingInOrder.java:46)&#13;
	at org.hamcrest.collection.IsIterableContainingInOrder.matchesSafely(IsIterableContainingInOrder.java:23)&#13;
	at org.hamcrest.collection.IsIterableContainingInOrder.matchesSafely(IsIterableContainingInOrder.java:14)&#13;
	at org.hamcrest.TypeSafeDiagnosingMatcher.matches(TypeSafeDiagnosingMatcher.java:55)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:12)&#13;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)&#13;
	at test.numbers.InfiniteNaturalNumberTest$Divisors.computeAndCheck(InfiniteNaturalNumberTest.java:432)&#13;
	at test.numbers.InfiniteNaturalNumberTest$Divisors$AllPrimeDivisors$PerfTests.after(InfiniteNaturalNumberTest.java:466)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:83)&#13;
	at de.bechte.junit.runners.context.processing.MethodExecutor.run(MethodExecutor.java:57)&#13;
	at de.bechte.junit.runners.context.statements.RunChildren.evaluate(RunChildren.java:38)&#13;
	at de.bechte.junit.runners.context.statements.RunAll.evaluate(RunAll.java:27)&#13;
	at de.bechte.junit.runners.context.statements.StatementExecutor.execute(StatementExecutor.java:28)&#13;
	at de.bechte.junit.runners.context.HierarchicalContextRunner.run(HierarchicalContextRunner.java:134)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
